Output:
Token                 Lexeme                 Production Rules
---------             --------               --------------------
Keyword               function               Rat24F, OptFunctionsDefinitions, FunctionsDefinitions, Function
Identifier            convert                
Separator             (                      
Identifier            fahr                   OptParamaterList, ParamaterList, Paramater, IDs
Keyword               integer                IDs_prime, IDs
Separator             )                      IDs_prime, IDs, Qualifier, ParamaterListPrime
Separator             {                      OptDeclarationList, Body
Keyword               return                 StatementList, Statement, Return
Integer               5                      Expression, Term, Factor, Primary
Operator              *                      TermPrime
Separator             (                      Factor, Primary
Identifier            fahr                   Expression, Term, Factor, Primary
Operator              -                      TermPrime, ExpressionPrime
Integer               32                     Term, Factor, Primary
Separator             )                      TermPrime, ExpressionPrime, Term, Factor, Primary, TermPrime
Operator              /                      TermPrime
Integer               9                      Factor, Primary
Separator             ;                      TermPrime, ExpressionPrime, Term, Factor, Primary, TermPrime
Separator             }                      StatementList_prime
Separator             @                      FunctionsDefintions_prime
Keyword               integer                OptDeclarationList, DeclarationList, Declaration, Qualifier, IDs
Identifier            low                    IDs_prime, IDs
Separator             ,                      IDs_prime
Identifier            high                   IDs
Separator             ,                      IDs_prime
Identifier            step                   IDs
Separator             ;                      IDs_prime, IDs
Keyword               get                    DeclarationList_prime, StatementList, Statement, Scan
Separator             (                      
Identifier            low                    IDs
Separator             ,                      IDs_prime
Identifier            high                   IDs
Separator             ,                      IDs_prime
Identifier            step                   IDs
Separator             )                      IDs_prime, IDs
Separator             ;                      
Keyword               while                  StatementList_prime, StatementList, Statement, While
Separator             (                      
Identifier            low                    Condition, Expression, Term, Factor, Primary
Operator              <=                     TermPrime, ExpressionPrime, Term, Factor, Primary, TermPrime, Relop
Identifier            high                   Expression, Term, Factor, Primary
Separator             )                      TermPrime, ExpressionPrime, Term, Factor, Primary, TermPrime
Separator             {                      Statement, Compound
Keyword               put                    StatementList, Statement, Print
Separator             (                      
Identifier            low                    Expression, Term, Factor, Primary
Separator             )                      TermPrime, ExpressionPrime, Term, Factor, Primary, TermPrime
Separator             ;                      
Keyword               put                    StatementList_prime, StatementList, Statement, Print
Separator             (                      
Identifier            convert                Expression, Term, Factor, Primary
Separator             (                      IDs, TermPrime, ExpressionPrime, Term, Factor, Primary
Identifier            low                    Expression, Term, Factor, Primary
Separator             )                      TermPrime, ExpressionPrime, Term, Factor, Primary, TermPrime
Separator             )                      TermPrime
Separator             ;                      
Identifier            low                    StatementList_prime, StatementList, Statement, Assign
Operator              =                      
Identifier            low                    Expression, Term, Factor, Primary
Operator              +                      TermPrime, ExpressionPrime
Identifier            step                   Term, Factor, Primary
Separator             ;                      TermPrime, ExpressionPrime, Term, Factor, Primary, TermPrime
Separator             }                      StatementList_prime
Keyword               integer                StatementList_prime, StatementList, Statement, Assign

ERROR ON LINE 14 - EXPECTED '=' AFTER IDENTIFIER